{"title":"Lecture 2: Induction","markdown":{"yaml":{"title":"Lecture 2: Induction","date":"08/30/2023","date-format":"ddd DD MMMM YYYY","published-title":"Lecture Date","author":"Heather Zinn Brooks","description":"Proof by induction is a popular and useful proof technique. Here at Harvey Mudd College, we encounter it in our very first week in Math 19. In this lecture, we'll learn a little bit more about where this technique comes from and why it works, and we'll encounter some style tips and pitfalls to avoid."},"headingText":"Lecture video","containsRefs":false,"markdown":"\n\n::: {.hidden}\n$$\n \\def\\N{{\\mathbb{N}}}\n$$\n:::\n\n\n{{< video https://www.youtube.com/embed/eBUQeS7b3N4 >}}\n\n## The natural numbers \n\nWhat are the natural numbers? We can intuitively think of this set as the 'counting numbers'  $\\N = \\{1, 2, 3, \\dots \\}$. A set of axioms for the natural numbers comes from Giuseppe Peano (1889).\n\n::: {.callout-note icon=false appearance=\"minimal\"}\n::: {#def-peano}\n\n## The Peano Axioms\n\nLet $\\N$ be a set containing the element 1. Define a successor function $S: \\N \\to \\N$, with the following requirements:\n\n - $S(x) \\neq 1$ for all $x \\in \\N.$ \n - If $S(x) = S(y)$ then $x=y$ for all $x, y \\in \\N.$ \n - Let $A$ be any subset of $\\N$ which contains 1 and is closed under $S$, so $S(x) \\in A$ for all $x\\in A.$ \t\n\n Then $A = \\N.$ \n\n:::\n:::\n\nThe definition boils down to two ideas: there is a first element (1), and every element in the set has a successor in the set that is not 1. So, we can see that proof by induction is based on axiomatic properties of $\\N$.\n[You can start $\\N$ with zero instead of 1. I'm not going to take a stance on this debate either way.]{.aside}\n\nThe principle of induction implies the **well-ordering principle** of $\\N:$ \n\n::: {.callout-note icon=false appearance=\"minimal\"}\n::: {#def-wellordering}\n\n## The well-ordering principle\n\nEvery nonempty subset of $\\N$ has a smallest element.\n\n:::\n:::\n\n## The basics of proof by induction\n\nProof by induction is a way to prove infinitely many statements at once, given that these statements can be indexed by $n \\in \\N:$ in other words, there's a first statement, a second statement, a third statement, and so on.\n\nWe can formalize this a little more: if we let $P(n)$ be a set of statements that are indexed by $n \\in \\N$, then the goal is to show that $P(n)$ is true for all $n.$\n\n**How proof by induction works:**\n\nIf $S = \\{n: P(n) \\text{ is true}\\}$, where $n \\in \\N$, then $S$ is a subset of $\\N$. If our goal is to show that $P(n)$ is true for all $n$, this is equivalent to showing that $S=\\N.$\nTo do this, we must show:\n\n1. $P(1)$ is true. We call this the **base case**. \n2. If $P(k)$ is true then $P(k+1)$ is true. We call this the **inductive step**, and the assumption that $P(k)$ is true is called the **inductive hypothesis**. \n[The first condition says \"*There is a first element*\" and the second says \"*Every element has a successor*\"]{.aside}\n\nThen, because $S$ satisfies the axioms, it must be that $S=\\N$ and so we can conclude our statement $P(n)$ is true for all $n.$\n\n## Strong induction\n\nThere is a twist on this proof technique that we call **strong induction**. To use strong induction, we must show:\n\n- **Base case:** $P(1)$ is true.\n- **Inductive step:** If $P(1), P(2), \\dots, P(k)$ is true, then $P(k+1)$ is true.\n\nNotice that the only difference is that we have modified the inductive hypothesis to assume that all statements up to statement $k$ are true, instead of only assuming that the $k$th statement is true.\n\n::: {.callout-warning}\n\nDespite the name, strong induction does not give you a 'stronger' result. You are still showing that $S$ is the same as $\\N$, so these techniques are in fact equivalent.\n\n:::\n\n## Style tips for proof by induction\n\n- At the beginning of your proof, inform your reader that it's a proof by induction on ___, where you fill in the blank with your variable that will serve as an index.\n- Separate out your hypotheses: tell your reader when you're doing the base case and when you're doing the inductive step. Make your inductive hypothesis clear.\n- Remind your reader of the conclusion at the end.\n\n::: {.callout-important icon=false appearance=\"minimal\"}\n## In-class activity\nIn some examples in lecture, we'll put these style tips into practice.\n:::\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"induction.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.475","theme":"litera","linkcolor":"palevioletred","title":"Lecture 2: Induction","date":"08/30/2023","date-format":"ddd DD MMMM YYYY","published-title":"Lecture Date","author":"Heather Zinn Brooks","description":"Proof by induction is a popular and useful proof technique. Here at Harvey Mudd College, we encounter it in our very first week in Math 19. In this lecture, we'll learn a little bit more about where this technique comes from and why it works, and we'll encounter some style tips and pitfalls to avoid."},"extensions":{"book":{"multiFile":true}}}}}